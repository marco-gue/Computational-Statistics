---
title: "Generation of random samples"
subtitle: "Prof: Luiz Peternelli"
author: "Marco Guerra Hinostroza"
date: "`r Sys.Date()`"
format:
  html:
    embed-resources: true
    toc: true
    toc-location: left
    number-sections: false
    code-fold: false
    filters:
        - highlight-text
editor_options: 
  chunk_output_type: console
---

# Probability density function
$$
f(y) = 
\begin{cases}
\frac{2}{3}(y + 1) \quad ; \quad 0 \le y \le 1 \\
0 \quad ; \quad c.c
\end{cases}
$$

# Method of transformation

### Accumulated distribution function

$$
F(y) = \frac{2}{3} \left( \int_0^y t \, dt + \int_0^y 1 \, dt \right)
$$

$$
F(y) = \frac{2}{3} \left( \frac{y^2}{2} + y \right) = \frac{y^2 + 2y}{3}
$$

$$
F(y) = \frac{y^2 + 2y}{3}, \quad  0 \leq y \leq 1
$$

### inverting F(y)

We define $F(y) = u$, where $u$ is a random number from a uniform distribution $U(0,1)$

$$
u = \frac{y^2 + 2y}{3}
$$

$$
y^2 + 2y - 3u = 0
$$
Using the quadratic formula

$$
y = \frac{-2 \pm \sqrt{4 + 12u}}{2} = -1 \pm \sqrt{1 + 3u}
$$

Since $y$ in the interval $0 \leq y \leq 1$ we choose the positive solution

$$
y = -1 + \sqrt{1 + 3u}
$$

For simulate random variable values Y, we generate value $u \sim U(0,1)$ and replace in the expression

$$
Y = F^{-1}(U) -1 + \sqrt{1 + 3U}
$$

```{r}
sim_t <- function(n)
{
  ui <- runif(n)
  x <- -1 + sqrt(1 + 3 * ui)
  cat("number of iterations:", n, fill = TRUE)
  
  return(x)
}

```

```{r}
y_t <- sim_t(100)
hist(y_t, prob = TRUE)
curve(2/3*(x+1), 0, 1, add = TRUE, col = "blue")

```

# Method of acceptance-rejection
```{r}
sim_ar <- function(n,m) {
  y <- numeric(n)
  #incluindo um contador para o tamanho da amostra
  i <- 0
  #incluindo um contador para o numero de pares de uniformes geradas
  j <- 0
  
  while (i < n) {
    # 1. Gerar Y candidato da distribuição proposta (Uniforme[0, 1])
    yc <- runif(1, min = 0, max = 1)
    
    # 2. Gerar U da Uniforme[0, 1] para a aceitação
    U <- runif(1)
    
    f <- 2/3*(yc+1)
    
    # 3. Teste de aceitação
    if (U < f/m) {
      y[i+1] <- yc  # Aceita o valor candidato
      i <- i+1  # Incrementa o contador de aceitação
    }
    j <- j+1
  }
  cat("were generated ", j, "pair of uniforms ",fill=T)
  cat("to simulate ", i, " values of the random variable of interest ",fill=T)
  cat("ratio of efficiency ",round((i/j)*100,2), "% ",fill=T)
  return(y)
}
```

```{r}
y_ar <- sim_ar(100,4/3)

hist(y_ar,prob=T)
curve((x + 1)/2,0,1,add=T, col = "blue")
```

### Mean using different methods
:::: {.columns}
::: {.column width="60%"}
#### Analytical
$$
E(Y) = \left( \int_0^1 y \cdot \frac{2}{3}(y+1) \, dy \right)
$$

$$
E(Y) = \frac{2}{3}\left( \int_0^1 y^2 \, dy + \int_0^1 y \, dy \right)
$$

$$
E(Y) = \frac{2}{3} \left( \frac{1}{3} + \frac{1}{2} \right) = 0.5555
$$
:::

::: {.column width="3%"}
:::

::: {.column width="37%"}
#### Transformation
```{r}
mean(y_t)
```

#### Acceptance-rejection
```{r}
mean(y_ar)
```
:::

::::

### Variance using different methods
:::: {.columns}
::: {.column width="60%"}
#### Analytical
$$
\text{Var}(Y) = E(Y^2) - [E(Y)]^2
$$
```{r}
# Define f(y)
f <- function(y) (2/3) * (y + 1)

# Expected value E(Y)
E_Y <- integrate(function(y) y * f(y), 0, 1)$value

# Expected value E(Y^2)
E_Y2 <- integrate(function(y) y^2 * f(y), 0, 1)$value

# Variance
variance_Y <- E_Y2 - E_Y^2
variance_Y

```

:::

::: {.column width="3%"}
:::

::: {.column width="37%"}
#### Transformation
```{r}
var(y_t)
```

#### Acceptance-rejection
```{r}
var(y_ar)
```
:::

::::

# Discussion

* The transformation method is simpler to apply but restricted, on the other hand the acceptance-rejection method is more versatile but a bit more difficult to construct.

* In terms of execution time, when the number of simulated values is low, the times are quite similar. However, as the number of simulated values increases significantly, the differences become more pronounced, with the acceptance-rejection method taking longer to execute.

:::: {.columns}
::: {.column width="32.6%"}
```{r}
#| output: false
start <-Sys.time()
sim_t(10000)
end <- Sys.time()
end - start
# 0.0173
```

```{r}
#| output: false
start <-Sys.time()
sim_ar(10000, 4/3)
end <- Sys.time()
end - start
# 0.0550
```
:::

::: {.column width="1%"}
:::

::: {.column width="32.6%"}
```{r}
#| output: false
start <-Sys.time()
sim_t(100000)
end <- Sys.time()
end - start
# 0.0195
```

```{r}
#| output: false
start <-Sys.time()
sim_ar(100000, 4/3)
end <- Sys.time()
end - start
# 0.3032
```
:::

::: {.column width="1%"}
:::

::: {.column width="32.6%"}
```{r}
#| output: false
start <-Sys.time()
sim_t(1000000)
end <- Sys.time()
end - start
# 0.0258
```

```{r}
#| output: false
start <-Sys.time()
sim_ar(1000000, 4/3)
end <- Sys.time()
end - start
# 2.6501
```
:::
::::

# Probability

```{r}
f_y <- function(y) {
  (2 / 3) * (y + 1)
}

# Calculating the integral f(y) in the interval [0.5, 1]
prob_exata <- integrate(f_y, lower = 0.5, upper = 1)$value

cat("The exact probability P(0.5 ≤ Y ≤ 1) is:", prob_exata, "\n")

```

```{r}
prob_ar <- mean(y_ar >= 0.5 & y_ar <= 1)
cat("The probability estimated using acceptance-rejection method:", prob_ar, "\n")
```

