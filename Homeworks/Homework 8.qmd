---
title: "Homework 8"
subtitle: "Prof: Luiz Peternelli"
author: "Marco Guerra Hinostroza"
date: "`r Sys.Date()`"
format:
  html:
    embed-resources: true
    toc: true
    toc-location: left
    number-sections: false
    code-fold: false
    filters:
        - highlight-text
editor_options: 
  chunk_output_type: console
---

```{r, include=FALSE}
library(ggplot2)
library(ggalt)
library(SimDesign)
library(tidyverse)
library("gridExtra")
```


## K-Nearest Neighbors (KNN)

## Question 2

#### Gráfico da esquerda
```{r}
# definindo a matriz de correlação entre as variáveis
sigma <- matrix(c(1, 0, 0, 1), ncol=2)

# gerando os dados normal bivariada para laranja
sim_norm <- rmvnorm(n=20, mean=c(3,3), sigma=sigma)
norm_laranja <- data.frame(sim_norm)

# gerando os dados normal bivariada para verde
sim_norm <- rmvnorm(n=20, mean=c(9,6), sigma=sigma)
norm_verde <- data.frame(sim_norm)

# gerando os dados normal bivariada para azul
sim_norm <- rmvnorm(n=20, mean=c(3,9), sigma=sigma)
norm_azul <- data.frame(sim_norm)

# juntando os dados para o gráfico da esquerda
dados.finais.e <- bind_rows(norm_laranja, norm_verde, norm_azul)

# definindo as classes
x <- c("orange","green","blue")

#juntando valores e classes para o gráfico da esquerda
dados.finais.e <- mutate(dados.finais.e, Grupo = rep(x, c(20,20,20)))

# construindo o gráfico da esquerda
plot.esquerda <-
ggplot(dados.finais.e) +
  aes(x = X1, y = X2, colour = Grupo) +
  geom_point(shape = "circle") +
  scale_color_manual(
    values = c(blue = "blue",
               green = "green",
               orange = "orange")
  ) +
  xlim(min(dados.finais.e[,1])-0.5,max(dados.finais.e[,1]+0.5)) +
  ylim(min(dados.finais.e[,2])-0.5,max(dados.finais.e[,2]+0.5)) +
  theme_bw() +
  theme (legend.position = "none")

#plot.esquerda

# verificação da predição para o gráfico da esquerda
#Se (x1 = 2; x2 = 4) (para k = 1, 5 ou 10) a observação seria de qual grupo?
#Se (x1 = 4; x2 = 5) (para k = 1, 5 ou 10) a observação seria de qual grupo?

teste <- rbind(c(2, 4), c(4, 5))

Grupo<-dados.finais.e[,3]
dados2<-dados.finais.e[,-3]
```


```{r}
library(class)
saida.knn.test1 <- knn(dados2,teste,Grupo,k=1,prob=T)
saida.knn.test1

saida.knn.test2 <- knn(dados2,teste,Grupo,k=5,prob=T)
saida.knn.test2

saida.knn.test3 <- knn(dados2,teste,Grupo,k=10,prob=T)
saida.knn.test3
```


#### Gráfico da direita
```{r}
# gerando os dados normal bivariada para laranja
#sigma <- matrix(c(1, 0, 0, 1), ncol=2)
sim_norm <- rmvnorm(n=20, mean=c(3,3), sigma=sigma)
norm_laranja <- data.frame(sim_norm)

# gerando os dados normal bivariada para verde
sim_norm <- rmvnorm(n=20, mean=c(6,4), sigma=sigma)

norm_verde <- data.frame(sim_norm)

# gerando os dados normal bivariada para azul
sim_norm <- rmvnorm(n=20, mean=c(3,6), sigma=sigma)
norm_azul <- data.frame(sim_norm)

dados.finais.d <- bind_rows(norm_laranja, norm_verde, norm_azul)

x <- c("orange","green","blue")

dados.finais.d <- mutate(dados.finais.d, Grupo = rep(x, c(20,20,20)))

plot.direita <- 
  ggplot(dados.finais.d) +
  aes(x = X1, y = X2, colour = Grupo) +
  geom_point(shape = "circle") +
  scale_color_manual(
    values = c(blue = "blue",
               green = "green",
               orange = "orange")
  ) +
  xlim(min(dados.finais.d[,1])-0.5,max(dados.finais.d[,1]+0.5)) +
  ylim(min(dados.finais.d[,2])-0.5,max(dados.finais.d[,2]+0.5)) +
  theme_bw() +
  theme (legend.position = "none")

teste <- rbind(c(2, 4), c(4, 5))

Grupo<-dados.finais.d[,3]
dados2<-dados.finais.d[,-3]
```


```{r}
saida.knn.test1 <- knn(dados2,teste,Grupo,k=1,prob=T)
saida.knn.test1

saida.knn.test2 <- knn(dados2,teste,Grupo,k=5,prob=T)
saida.knn.test2

saida.knn.test3 <- knn(dados2,teste,Grupo,k=10,prob=T)
saida.knn.test3
```

#### Juntando os plots
```{r}
grid.arrange(plot.esquerda, plot.direita, ncol = 2)
```


## Question 3

$$
D_{Euclidean}(x_i,x_j) = \sqrt{\sum^p_{s=1}(x_{is}  - x_{js})^2}
$$

where $x_i$ is the value of the predictors for observation $i$, $x_i$ is the value of the predictors for observation $j$, $p$ represents the total number of variables or dimensions in the space where the points $x_i$ and $x_j$ are located, and $s$ is an index that iterates over each variable or dimension, from 1 to $p$.

Euclidian distance between observations $i=4$ and $j=6$:

$$
D_{Euclidean}(x_4,x_6) = \sqrt{(0  - 1)^2 + (1  - 1)^2 + (2  - 1)^2} = \sqrt{2} = 1.414214
$$

```{r}
x1<-c(0,2,0,0,-1,1)
x2<-c(3,0,1,1,0,1)
x3<-c(0,0,3,2,1,1)
y<-c('red','red','red','green','green','red')
dados<-data.frame(x1,x2,x3,y)
dados
```


```{r}
dist_euclid <- function(x1,x2)
  {
  d <- sqrt(sum((x1-x2)^2)) ;return(d)
}

dados2<-dados[,-4]

dist_euclid(dados2[4,],dados2[6,])
```

```{r}
dist(dados2) 
```


## Question 4

```{r}
sigma <- matrix(c(1, 0, 0, 1), ncol=2)
sim_x <- rmvnorm(n=100, mean=c(0,0), sigma=sigma)
data1 <- data.frame(sim_x)

# construindo o modelo usado para a simulação
erro.aleatorio <- rnorm(100, 0, 0.4)
y <- data1[,1] + data1[,2] + I(data1[,2]^2) + erro.aleatorio
#criando classes para y
ycod <- ifelse(y>mean(y), 1, 0)

dados.finais <- cbind(data1,y,ycod)
dim(dados.finais)
plot(dados.finais)
```

Fazendo e partiçoes
```{r}
dados.tst1 <- slice(dados.finais, 1:20)
dados.tst2 <- slice(dados.finais, 21:40)
dados.tst3 <- slice(dados.finais, 41:60)
dados.tst4 <- slice(dados.finais, 61:80)
```

Usando loop
```{r}
for (i in 1:4) {
  inicio <- (i - 1) * 20 + 1
  fim <- i * 20
  nome_objeto <- paste0("dados.tst", i)
  assign(nome_objeto, slice(dados.finais, inicio:fim))
}
```

Dados de treinamento
```{r}
dados.trn <- slice(dados.finais, 81:100)
```

```{r}
# set.seed (1)
train <- dados.trn[,-c(3,4)]
test1 <- dados.tst1[,-c(3,4)]
test2 <- dados.tst2[,-c(3,4)]
test3 <- dados.tst3[,-c(3,4)]
test4 <- dados.tst4[,-c(3,4)]

classe <- as.factor(dados.trn[,4])

# str(dados.trn.1)
# rodando o KNN
```

```{r}
knn.pred <- knn(train, test1, classe, k = 5)
true <- as.factor(dados.tst1$ycod)
table(knn.pred , true)
mean(knn.pred != true)
```

```{r}
knn.pred <- knn(train, test2, classe, k = 5)
true <- as.factor(dados.tst2$ycod)
table(knn.pred , true)
mean(knn.pred != true)
```

```{r}
knn.pred <- knn(train, test3, classe, k = 5)
true <- as.factor(dados.tst3$ycod)
table(knn.pred , true)
mean(knn.pred != true)
```

```{r}
knn.pred <- knn(train, test4, classe, k = 5)
true <- as.factor(dados.tst4$ycod)
table(knn.pred , true)
mean(knn.pred != true)
```

